// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://otiza:Fru3Zgh8HckA@ep-shy-shadow-77624271.eu-central-1.aws.neon.tech/AFIRAYDEV"

  // other options are:
  // * sqlite (https://pris.ly/d/help/databases/sqlite)
  // * mysql (https://pris.ly/d/help/databases/mysql)
  // * sqlserver (https://pris.ly/d/help/databases/mssql)
}

model User {
  id             String      @id @default(uuid())
  email          String      @unique
  name           String
  password       String
  is_blacklisted Boolean     @default(false)
  phone          String      @unique @default("")
  birth_date     String      @default("")
  customer_rank  Int         @default(0)
  login_status   Boolean     @default(false)
  role           Roles?      @relation(fields: [role_id], references: [id])
  role_id        String?
  team           Team?       @relation(fields: [team_id], references: [id])
  team_id        String?
  userconfig     Userconfig? @relation(fields: [userconfig_id], references: [id], onDelete: Cascade)
  userconfig_id  String?     @unique
  location       Location?   @relation(fields: [location_id], references: [id])
  location_id    String?     @unique
  image          Thumbnails? @relation(fields: [image_id], references: [id])
  image_id       String      @unique
  search         Search[]    @relation()
  created_at     DateTime    @default(now())
  updated_at     DateTime    @default(now()) @updatedAt
}

model Userconfig {
  id          String   @id @default(uuid())
  user        User?    @relation()
  currency    Currency? @relation(fields: [currency_id], references: [id])
  currency_id String   @default("")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Currency {
  id          String       @id @default(uuid())
  name        String
  description String
  userconfig  Userconfig[] @relation()
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
}

model Roles {
  id          String   @id @default(uuid())
  name        String
  description String
  user        User[]   @relation()
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Team {
  id          String      @id @default(uuid())
  name        String
  description String
  members     User[]      @relation()
  Warehouse   Warehouse[] @relation()
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
}

model Warehouse {
  id          String    @id @default(uuid())
  name        String
  team        Team      @relation(fields: [team_id], references: [id])
  team_id     String    @unique
  location    Location  @relation(fields: [location_id], references: [id])
  location_id String    @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  Products    Product[]
}

model Location {
  id          String     @id @default(uuid())
  name        String
  description String
  warehouse   Warehouse? @relation()
  user        User?      @relation()
  address1    String
  address2    String     @default("")
  city        String
  state       String
  latitude    String     @default("0")
  longitude   String     @default("0")
  country     String
  zip_code    String
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Search {
  id         String   @id @default(uuid())
  query      String
  user       User?    @relation(fields: [user_id], references: [id])
  user_id    String   @unique
  created_at DateTime @default(now())
}

model Thumbnails {
  id         String   @id @default(uuid())
  dest       String   @default("")
  product    Product? @relation(fields: [product_id], references: [id])
  product_id String?   @unique
  is_dev    Boolean  @default(false)
  created_at   DateTime      @default(now())
  Machine_Part Machine_Part?
  Maker        Maker?
  Machine      Machine?
  User         User?
  Category     Category?
}

model Product {
  id           String       @id @default(uuid())
  name         String
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  price        Float        @default(0)
  thumbs       Thumbnails[]
  references   String
  warehouse    Warehouse?    @relation(fields: [warehouse_id], references: [id])
  warehouse_id String?
  models        Car_Model[] 
  category   Category   @relation(fields: [category_id], references: [id])
  category_id String
  description  String
  default_thumb String @default("")
}

model Maker {
  id         String      @id @default(uuid())
  name       String
  created_at DateTime    @default(now())
  image      Thumbnails? @relation(fields: [image_id], references: [id])
  image_id   String?      @unique 
  updated_at DateTime    @updatedAt
  Models     Car_Model[]
}

model Car_Model {
  id         String      @id @default(uuid())
  name       String
  created_at DateTime    @default(now())
  maker      Maker       @relation(fields: [maker_id], references: [id])
  maker_id   String
  Machine    Machine   @relation(fields: [machine_id], references: [id])
  machine_id String
  updated_at DateTime    @updatedAt
  Products   Product[]
}



model Machine_Part {
  id         String      @id @default(uuid())
  name  String
  image      Thumbnails? @relation(fields: [image_id], references: [id])
  image_id   String?      @unique 
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  machine    Machine     @relation(fields: [machine_id], references: [id])
  machine_id String
  bg_color   String
  Categories Category[]
}
model Category{
  id       String      @id @default(uuid())
  name     String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  machine_part Machine_Part @relation(fields: [machine_part_id], references: [id])
  machine_part_id String
  Thumbnail Thumbnails? @relation(fields: [thumbnail_id], references: [id])
  thumbnail_id String? @unique 
  Products Product[]
}
model Machine {
  id            String         @id @default(uuid())
  name          String
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  image         Thumbnails?    @relation(fields: [image_id], references: [id])
  image_id      String?        @unique 
  machine_parts Machine_Part[]
  models        Car_Model[]
}
